// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TPI_ProgramacionIII.DBContexts;

#nullable disable

namespace TPI_ProgramacionIII.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240305031211_QuintaMigracion")]
    partial class QuintaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.LineOfOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SaleOrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleOrderId");

                    b.ToTable("LinesOfOrder");
                });

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Name = "Remera Roja",
                            Price = 12500m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 7,
                            Name = "Remera Negra",
                            Price = 13200m,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("UserType").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.Admin", b =>
                {
                    b.HasBaseType("TPI_ProgramacionIII.Data.Entities.User");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Admin");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Email = "seba@gmail.com",
                            LastName = "Sueiro",
                            Name = "Sebastian",
                            Password = "123456",
                            State = true,
                            UserName = "sebas",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.Client", b =>
                {
                    b.HasBaseType("TPI_ProgramacionIII.Data.Entities.User");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Troncoroni@gmail.com",
                            LastName = "Roncoroni",
                            Name = "Tomas",
                            Password = "123456",
                            State = true,
                            UserName = "tomiR",
                            Address = "San Martin 5550"
                        },
                        new
                        {
                            Id = 3,
                            Email = "NDiaz@gmail.com",
                            LastName = "Diaz",
                            Name = "Nahuel",
                            Password = "123456",
                            State = true,
                            UserName = "diasnahuel",
                            Address = "Italia 2500"
                        });
                });

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.LineOfOrder", b =>
                {
                    b.HasOne("TPI_ProgramacionIII.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TPI_ProgramacionIII.Data.Entities.Order", "SaleOrder")
                        .WithMany("LinesOfOrder")
                        .HasForeignKey("SaleOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SaleOrder");
                });

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.Order", b =>
                {
                    b.HasOne("TPI_ProgramacionIII.Data.Entities.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.Order", b =>
                {
                    b.Navigation("LinesOfOrder");
                });

            modelBuilder.Entity("TPI_ProgramacionIII.Data.Entities.Client", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
